name: C2D - Other Functionality Test

on:
  repository_dispatch:
    types: [run-other-tests]
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'
      branch:
        description: 'Branch to test'
        required: true
        default: 'dev'

permissions:
  contents: read

jobs:
  run-other-specs:
    name: Run Spec Files 02 & 05
    runs-on: ubuntu-latest
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.branch || github.event.inputs.branch }}

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install mochawesome

      - name: Set environment
        run: |
          if [[ "${{ github.event.client_payload.env || github.event.inputs.env }}" == "prod" ]]; then
            echo "CYPRESS_API_BASE_URL=https://api.click2deploy.com/api/v1" >> $GITHUB_ENV
            echo "CYPRESS_PROJECT_URL=https://click2deploy.com/project" >> $GITHUB_ENV
            echo "CYPRESS_HOME_URL=https://click2deploy.com/" >> $GITHUB_ENV
          else
            echo "CYPRESS_API_BASE_URL=https://dev-backend.click2deploy.com/api/v1" >> $GITHUB_ENV
            echo "CYPRESS_PROJECT_URL=https://dev.click2deploy.com/project" >> $GITHUB_ENV
            echo "CYPRESS_HOME_URL=https://dev.click2deploy.com/" >> $GITHUB_ENV
          fi

      - name: Run Cypress and generate JSON report
        run: |
          npx cypress run \
            --spec "cypress/e2e/C2D/EnhanceApproach/02_NewUI_merging_branches_on_different_stages.cy.js,cypress/e2e/C2D/EnhanceApproach/05_NewUI_create_project_using_existing_repo.cy.js" \
            --reporter mochawesome \
            --reporter-options reportDir=cypress/results,overwrite=false,html=false,json=true
        continue-on-error: true

      - name: Extract test results from JSON
        id: extract
        run: |
          PASSED=$(jq -r '.results[].suites[].tests[] | select(.state == "passed") | .title | @csv' cypress/results/mochawesome.json | sed 's/^/✅ /')
          FAILED=$(jq -r '.results[].suites[].tests[] | select(.state == "failed") | .title | @csv' cypress/results/mochawesome.json | sed 's/^/❌ /')
          echo "PASSED_TESTS=$PASSED" >> $GITHUB_ENV
          echo "FAILED_TESTS=$FAILED" >> $GITHUB_ENV

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }} *${{ github.workflow }}* has *${{ job.status }}*.\n*Branch:* ${{ github.ref_name }}\n\n*Passed Tests:*\n${{ env.PASSED_TESTS || 'None' }}\n\n*Failed Tests:*\n${{ env.FAILED_TESTS || 'None' }}\n\n🔗 <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View full logs>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
